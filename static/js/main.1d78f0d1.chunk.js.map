{"version":3,"sources":["images/dottedCircle.svg","images/CompletedTick.svg","images/DownloadIcon.svg","components/RenderDatabase.js","components/DownloadDeleteDialog.js","apis/suggestSearch.js","components/header/AutoSearchResult.js","components/header/SearchBox.js","components/header/SimpleAppBar.js","components/player/PlayPauseButton.js","components/player/NextButton.js","components/player/PreviousButton.js","components/player/MusicArt.js","components/player/SleepTimer.js","components/player/TimelineController.js","components/player/VolumeController.js","components/RelatedVideos.js","components/player/TopBar.js","components/player/MiniMusicArt.js","external/saveCountry.js","components/player/MainPlayer.js","components/CurrentSection.js","components/SwipeMenu.js","components/sections/SettingsPage.js","components/AppContainer.js","components/App.js","serviceWorker.js","index.js","components/GlobalState.js","external/saveSong.js","apis/youtubeSearch.js","apis/getAudioLink.js","images/moon-solid.svg","images/sun-solid.svg"],"names":["module","exports","__webpack_require__","p","currentId","DownloadDeleteDialog","_ref","isOpen","handleCancel","handleDelete","_useState","useState","_useState2","Object","slicedToArray","checkBox","setCheckBox","React","useEffect","console","log","react_default","a","createElement","Dialog","style","zIndex","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","FormControlLabel","control","Checkbox","color","checked","onChange","e","target","value","label","DialogActions","Button","onClick","useSongMethods","songId","_useContext","useContext","GlobalContext","_useContext2","objectDestructuringEmpty","dispatch","setSnackbarMsg","useCallback","data","type","snippet","deleteDialogState","setDeleteDialogState","_useState3","_useState4","dontAskPopup","setDontAskPopup","popupLocalState","localStorage","getItem","handleDownload","asyncToGenerator","regenerator_default","mark","_callee","res","status","wrap","_context","prev","next","getAudioLink","get","params","sent","downloadSong","stop","_x","apply","this","arguments","deleteTheSong","_ref2","_callee2","_context2","deleteSongAudio","setItem","_x2","deleteDialogComponent","components_DownloadDeleteDialog","handleRemoveSong","RenderDatabase","props","songs","_useContext3","_useContext4","_useState5","window","innerHeight","_useState6","setWindowHeight","handleClick","song","videoId","audio","thumbnail","title","channelTitle","maxThumbnail","concat","sdThumbnail","_useSongMethods","returnAnimatedClass","downloadState","renderResult","map","index","Fragment","ListItem","alignItems","button","ListItemAvatar","Avatar","className","width","height","marginRight","alt","src","ListItemText","primary","secondary","Typography","component","variant","CompletedTick","DownloadIcon","renderItem","forwardRef","row","ref","objectSpread2","maxWidth","left","transform","Divider","index_esm","itemCount","length","innerWidth","axios","create","baseURL","adapter","jsonpAdapter","hl","ds","client","headers","Access-Control-Allow-Origin","AutoSearchResult","results","onSearchSelect","result","key","ListItemIcon","paddingLeft","Search","List","withRouter","history","location","URLSearchParams","search","searchState","setSearchState","setSearchResult","searchQuery","setSearchQuery","autoSearchData","setAutoSearch","ytSearchQuery","setYtSearchQuery","_useState7","_useState8","isPopperOpen","setPopper","push","pathname","getAutocomplete","response","suggestSearch","q","_ref3","youtubeSearch","maxResults","items","searchYt","query","IconButton","goBack","aria-label","ArrowBack","onSubmit","preventDefault","lastChild","blur","onSearchSubmit","InputBase","fullWidth","placeholder","autoFocus","Popper","anchorEl","document","getElementById","popperOptions","modifiers","preventOverflow","padding","placement","Grid","container","justify","CircularProgress","header_AutoSearchResult","styles","root","flexGrow","textAlign","input","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","in","changeAppBar","path","listen","AppBar","position","Toolbar","Menu","header_SearchBox","PlayPauseButton","player","audioState","minimized","size","pause","play","stopPropagation","disableFocusRipple","disableRipple","Pause","fontSize","opacity","PauseCircleFilled","PlayArrow","PlayCircleFilled","onPlayNext","SkipNext","playPrevious","SkipPrevious","dblTouchTapMaxDelay","latestTouchTap","time","timerTimeout","MusicArt","rating","audioEl","swipeUpHandler","useSwipeable","onSwipedUp","dislikeSong","heartStyle","setHeartStyle","artContainerStyle","background","circleSvg","likeSong","setTimeout","rateSong","marginTop","event","touchTap","Date","getTime","currentTarget","isFastDblTouchTap","isDblTouchTap","framer_motion_es","div","assign","drag","dragElastic","dragTransition","bounceStiffness","bounceDamping","dragConstraints","right","top","bottom","FavoriteTwoTone","boxShadow","URL","createObjectURL","imgProps","onLoad","naturalWidth","checkImg","align","re","RegExp","replace","shortTitle","PrettoSlider","withStyles","thumb","marginLeft","&::before","content","borderRadius","border","track","rail","Slider","MiniSlider","display","formatTime","secs","minutes","Math","floor","seconds","ceil","TimelineController","currentTime","setCurrentTime","setTimeInterval","setInterval","clearInterval","max","duration","margin","newValue","VolumeController","setPlayerState","volume","setVolume","spacing","item","VolumeUp","xs","newVal","setSleepTimeToLocalStorage","alwaysOn","sleepTimerSettings","JSON","stringify","getSleepTimeFromLocalStoarge","parse","removeSleepTimer","removeItem","SleepTimer","sliderValue","changeSliderValue","setOpen","checkbox","setCheckbox","isTimerSet","setIsTimerSet","setTimer","clearTimeout","sleepTimerObj","Timer","TimerOff","react_circle_slider_lib","stepSize","gradientColorFrom","gradientColorTo","knobRadius","progressWidth","circleWidth","Switch","labelPlacement","DownloadLoader","LinearProgress","TopBar","snackbarMsg","isSongDownloaded","setSongDownloaded","isSongDownloading","setSongDownloading","player_VolumeController","Reply","navigator","share","text","url","href","then","catch","error","player_SleepTimer","DoneOutline","GetApp","ExpandMore","MiniMuiscArt","playPause","playNext","emptyPlayer","Close","player_PlayPauseButton","RelatedVideos","toggleMaxPlaylist","setPlaylist","playerState","relatedVideos","setRelatedVideos","setIsRepeatOn","isRepeatOn","spring","damping","stiffness","video","li","positionTransition","MusicVideo","slice","LibraryMusic","Shuffle","arry","reduce","acc","_","i","rnd","random","temp","toConsumableArray","RepeatOne","Repeat","KeyboardArrowDown","KeyboardArrowUp","dense","country_code","mode","country","fetchCountry","relatedVideosVar","previousLocation","MainPlayer","_useContext2$","currentVideoSnippet","themeSelectValue","setCurrentVideoSnippet","isItFromPlaylist","setIsItFromPlaylist","setAudioState","_useState9","_useState10","setMinimized","_useState11","_useState12","_useState13","_useState14","setRating","_useState15","_useState16","isNextFromMini","setIsNextFromMini","_useState17","_useState18","body","querySelector","audioPlayer","useRef","current","setupMediaSessions","mediaSession","metadata","MediaMetadata","artist","artwork","sizes","setActionHandler","playAudio","getAudio","searchRelated","relatedToVideoId","setAudioSrcAndPlay","_ref4","_callee3","_context3","setVideoSnippet","hidden","currentIndex","findIndex","playerStyle","transition","overflow","expandPlayer","state","modal","updateSongDB","_ref5","_callee4","_context4","updatePlayingSong","initPosition","containerRef","swipeHandlerMaximized","onSwipedDown","onSwiping","changedTouches","screenY","positionDifference","round","containerRefStyle","onSwiped","onSwipedRight","playTimeout","onSwipedLeft","swipeHandlerMin","fetchAndSetCurrentVideoSnippet","action","justifyContent","player_TopBar","player_MusicArt","player_TimelineController","PreviousButton","NextButton","components_RelatedVideos","returnMaximizedPlayer","MiniMusicArt","returnMinimizedPlayer","onLoadStart","onLoadedData","onPlay","onPlaying","onPause","onEnded","autoPlay","SwipeMenu","menuOpen","setMenuOpen","setThemeSelectValue","isNight","setIsNight","changeTheme","theme","SwipeableDrawer","onOpen","img","sun","moon","initial","scale","animate","rotate","exit","Link","to","Settings","Feedback","FreeBreakfast","People","MaterialLink","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Info","SettingsPage","selectComp","Box","m","Select","displayEmpty","name","MenuItem","Container","gutterBottom","FormControl","FormGroup","LoginPage","lazy","bind","Promise","resolve","SearchResult","all","HomePage","FeedbackForm","PrivacyPage","DonatePage","ContributorsPage","CustomTab","indicator","labelIcon","Tabs","CustomTabs","&:hover","&$selected","&:focus","selected","Tab","deferredPrompt","undefined","addEventListener","searchResult","songsHistoryState","setSongsHistory","songsLikedState","setSongsLiked","songsDownloadedState","setSongsDownloaded","tabValue","setTabValue","updateCount","setUpdateCount","redirectState","setRedirectState","circularLoader","fetchSongs","t0","t1","getLikedSongs","t2","abrupt","t3","getDownloadedSongs","t4","t5","getHistory","t6","db","on","c","removeDownloadingState","continueToHome","prompt","userChoice","choiceResult","outcome","react","fallback","react_router","exact","render","videos","CurrentSection_RenderDatabase","player_MainPlayer","returnMainPlayer","indicatorColor","textColor","icon","Home","Favorite","History","defaultTheme","palette","pink","main","typography","useNextVariants","darkTheme","muiDarkTheme","createMuiTheme","muiDefaultTheme","AppContainer","checkDarkMode","selectedTheme","matchMedia","matches","hrs","getHours","useCheckDarkmode","userAgent","match","overscrollBehavior","classList","add","remove","ThemeProvider","react_router_dom","header_SimpleAppBar","CurrentSection","components_SwipeMenu","App","GlobalState","components_AppContainer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","components_App","process","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","createContext","initialState","reducer","_Applications_MAMP_htdocs_Ylight_Music_Client_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","globalState","useReducer","react__WEBPACK_IMPORTED_MODULE_1___default","Provider","Dexie","version","stores","_Applications_MAMP_htdocs_Ylight_Music_Client_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Applications_MAMP_htdocs_Ylight_Music_Client_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","videoObj","timestamp","now","playbackTimes","update","_x3","songsByTimeStamp","orderBy","limit","reverse","toArray","likedSongs","where","between","minKey","maxKey","_callee5","downloadedSongs","_context5","_ref6","_callee6","_context6","modify","x","_ref7","_callee7","thumbURL","_yield$Promise$all","_yield$Promise$all2","thumbnailBlob","songBlob","_context7","fetchProxiedBlob","_Applications_MAMP_htdocs_Ylight_Music_Client_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_x4","_x5","_ref8","_callee8","_context8","_x6","reject","xhr","XMLHttpRequest","responseType","onload","statusText","send","abort","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","part","videoCategoryId","keys","selectRandomKey"],"mappings":"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","file":"static/js/main.1d78f0d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dottedCircle.c96ca893.svg\";","module.exports = __webpack_public_path__ + \"static/media/CompletedTick.ffcb10fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/DownloadIcon.e927ae19.svg\";","import React, { useContext, useState, useEffect } from \"react\";\n// import {\n//   List,\n//   AutoSizer,\n//   CellMeasurer,\n//   CellMeasurerCache\n// } from \"react-virtualized\";\n\nimport { DynamicSizeList as List } from \"react-window-dynamic\";\n\n\nimport CompletedTick from \"../images/CompletedTick.svg\";\nimport DownloadIcon from \"../images/DownloadIcon.svg\";\n\nimport {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  ListItemText\n} from \"@material-ui/core\";\n\nimport DownloadDeleteDialog from \"./DownloadDeleteDialog\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nimport getAudioLink from \"../apis/getAudioLink\";\nimport { downloadSong, deleteSongAudio } from \"../external/saveSong\";\n\n// const cache = new CellMeasurerCache({\n//   minHeight: 50,\n//   defaultHeight: 60,\n//   fixedWidth: true\n//   // keyMapper: () => 1\n// });\n\nlet currentId;\n\nexport const useSongMethods = songId => {\n  const [{}, dispatch] = useContext(GlobalContext);\n\n  const setSnackbarMsg = React.useCallback(\n    data => {\n      dispatch({ type: \"setSnackbarMsg\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\n  const [dontAskPopup, setDontAskPopup] = useState(null);\n\n  useEffect(() => {\n    //convert string to bool\n    const popupLocalState = localStorage.getItem(\"dontAskPopup\") === \"true\";\n    setDontAskPopup(popupLocalState);\n    // for popup settings\n  }, []);\n\n  const handleDownload = async songId => {\n    // console.log(\"here is the id\", songId);\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: songId }\n    });\n    // first we will fetch the song link then we will download it\n    // the download song function takes id and the url\n    const status = await downloadSong(songId, res.data);\n    // after the downloading is done we will remove the downloading class\n    // set the snackbar message\n    setSnackbarMsg(\"Song Downloaded\");\n    console.log(\"song status\", status);\n  };\n\n  const disablePopup = () => {\n    localStorage.setItem(\"dontAskPopup\", true);\n    setDontAskPopup(true);\n  };\n\n  const deleteTheSong = async checkBox => {\n    const deleted = await deleteSongAudio(currentId);\n    setDeleteDialogState(false);\n    setSnackbarMsg(\"Deleted Successfully\");\n\n    console.log(currentId, checkBox);\n    // we will set it to localstorage the popup option\n    if (checkBox) {\n      disablePopup();\n    }\n  };\n\n  // hadnling download dialog\n  const handleRemoveSong = songId => {\n    console.log(\"handle remove dude\");\n    currentId = songId;\n    // when user clicks on the download badge we will check the state\n    // then delete the song without showing the popup if dontAskPopup is true\n    // and delete the song by calling deleteTheSong\n    dontAskPopup ? deleteTheSong() : setDeleteDialogState(true);\n  };\n\n  const deleteDialogComponent = dontAskPopup ? null : (\n    <DownloadDeleteDialog\n      isOpen={deleteDialogState}\n      handleCancel={() => setDeleteDialogState(false)} // we will just hide the dialog on cancel\n      handleDelete={deleteTheSong} //if user wants to delete the song we will just do it\n    />\n  );\n\n  return {\n    handleDownload,\n    handleRemoveSong,\n    deleteTheSong,\n    dontAskPopup,\n    setDeleteDialogState,\n    deleteDialogState,\n    deleteDialogComponent\n  };\n};\n\nconst RenderDatabase = props => {\n  const songs = props.songs;\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const setSnackbarMsg = data => {\n    dispatch({ type: \"setSnakbarMsg\", snippet: data });\n  };\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  const handleClick = song => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: song.videoId,\n      audio: song.audio,\n      thumbnail: song.thumbnail,\n      title: song.title,\n      channelTitle: song.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${song.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${song.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n  };\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent\n  } = useSongMethods();\n\n  const returnAnimatedClass = song => {\n    if (song.downloadState === \"downloading\") {\n      console.log(song.downloadState);\n      return \"downloading-animation\";\n    } else {\n      return \"\";\n    }\n  };\n\n\n\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight);\n  });\n\n  const renderResult = songs.map((song, index) => {\n    return (\n      <>\n        <ListItem\n          alignItems=\"flex-start\"\n          button\n          onClick={() => handleClick(song)}\n          // component={Link}\n          // to={{ pathname: \"/play\", search: `?id=${song.videoId}`, state: { modal: true } }}\n        >\n          <ListItemAvatar>\n            <Avatar\n              className=\"searchThumb\"\n              style={{ width: \"60px\", height: \"60px\", marginRight: \"15px\" }}\n              alt={song.title}\n              src={`https://img.youtube.com/vi/${song.videoId}/default.jpg`}\n            />\n          </ListItemAvatar>\n          {/* we will play the song when clicked on title */}\n          <ListItemText\n            primary={song.title}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  {song.channelTitle}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <div\n          className=\"download-container\"\n          onClick={() =>\n            song.audio\n              ? handleRemoveSong(song.videoId)\n              : handleDownload(song.videoId)\n          }\n        >\n          <div className=\"badge-container\">\n            {/* if there is audio file then we will show tick mark icon */}\n            <img\n              className={returnAnimatedClass(song)}\n              src={song.audio ? CompletedTick : DownloadIcon}\n              alt=\"downloading icon\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  });\n\n  const renderItem = React.forwardRef((row, ref) => (\n    <div\n      ref={ref}\n      style={{\n        ...row.style,\n        maxWidth: \"1000px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }}\n    >\n      {renderResult[row.index]}\n      <Divider />\n    </div>\n  ));\n  return (\n    <>\n      {deleteDialogComponent}\n\n      <List\n        height={window.innerHeight - 100}\n        itemCount={songs.length}\n        width={window.innerWidth}\n      >\n        {renderItem}\n      </List>\n    </>\n  );\n};\n\nexport default RenderDatabase;\n","import React, { useState } from \"react\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst DownloadDeleteDialog = ({ isOpen, handleCancel, handleDelete }) => {\n  const [checkBox, setCheckBox] = useState(false);\n\n  React.useEffect(() => {\n    console.log(checkBox);\n  }, [checkBox]);\n\n  return (\n    <div>\n      <Dialog\n        style={{ zIndex: 1500 }}\n        open={isOpen}\n        onClose={handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Delete this song from your device ?\"}\n        </DialogTitle>\n        <DialogContent>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={checkBox}\n                onChange={e => setCheckBox(e.target.checked)}\n                value=\"checkBox\"\n              />\n            }\n            label=\"Don't ask again\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => handleDelete(checkBox)} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DownloadDeleteDialog;\n","import axios from \"axios\";\nimport jsonpAdapter from \"axios-jsonp\"\n\nexport default axios.create({\n  baseURL: \"https://suggestqueries.google.com/complete/search?\",\n  adapter: jsonpAdapter,\n  params: {\n    hl: \"en\", // Language\n    ds: \"yt\", // Restrict lookup to youtube\n    client: \"youtube\" // force youtube style response, i.e. jsonp\n  },\n  headers: {\"Access-Control-Allow-Origin\": \"*\"}\n});\n","import React from \"react\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst AutoSearchResult = ({ results, onSearchSelect }) => {\n  let renderResult = [];\n  if (results) {\n    renderResult = results.map((result, index) => {\n      return (\n        <ListItem key={index} onClick={() => onSearchSelect(result[0])} button>\n          <ListItemIcon style={{ paddingLeft: \"16px\" }}>\n            <Search />\n          </ListItemIcon>\n          <ListItemText primary={result[0]} />\n        </ListItem>\n      );\n    });\n  }\n  return <List>{renderResult}</List>;\n};\n\nexport default AutoSearchResult;\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  InputBase,\n  IconButton,\n  Popper,\n  CircularProgress,\n  Grid\n} from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { GlobalContext } from \"../GlobalState\";\nimport suggestSearch from \"../../apis/suggestSearch\";\nimport AutoSearchResult from \"./AutoSearchResult\";\nimport youtubeSearch from \"../../apis/youtubeSearch\";\n\nconst SearchBox = ({ history, location }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setSearchState = useCallback(\n    data => {\n      dispatch({ type: \"setSearchState\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const setSearchResult = useCallback(\n    data => {\n      console.log(data);\n      dispatch({ type: \"setSearchResult\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [autoSearchData, setAutoSearch] = useState(\"\");\n\n  const [ytSearchQuery, setYtSearchQuery] = useState(null);\n\n  // toggle popper\n  const [isPopperOpen, setPopper] = useState(true);\n\n  console.log(\"search box re rendered\");\n\n  // get back the selected search data\n  const onSearchSelect = result => {\n    setSearchQuery(result);\n    setYtSearchQuery(result);\n    setSearchState(\"searching\");\n    history.push({ pathname: \"/search\", search: `?q=${result}` });\n  };\n\n  // when user hits enter then also fetch the data from yt api\n  const onSearchSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.lastChild);\n    e.target.lastChild.lastChild.blur();\n    setSearchState(\"searching\");\n    setYtSearchQuery(searchQuery);\n    history.push({ pathname: \"/search\", search: `?q=${searchQuery}` });\n  };\n\n  // for controlled input change\n  const onChange = e => {\n    setSearchQuery(e.target.value);\n    getAutocomplete();\n  };\n\n  // get autocomplete data form api\n  const getAutocomplete = async () => {\n    const response = await suggestSearch.get(\"\", {\n      params: {\n        q: searchQuery\n      }\n    });\n    setAutoSearch(response.data[1]);\n  };\n\n  // get youtube search result from api\n  useEffect(() => {\n    const searchYt = async data => {\n      const res = await youtubeSearch.get(\"/search\", {\n        params: {\n          q: data,\n          maxResults: 15\n        }\n      });\n      setSearchResult(res.data.items);\n      setSearchState(\"completed\");\n    };\n    // only search if there is any value\n    if (ytSearchQuery && ytSearchQuery !== \"\") {\n      searchYt(ytSearchQuery);\n    }\n    // console.log(ytSearchQuery);\n  }, [ytSearchQuery, setSearchResult, setSearchState]);\n\n  useEffect(() => {\n    console.log(\"search state\", searchState);\n  }, [searchState]);\n\n  useEffect(() => {\n    // Listen for changes to the current location.\n    const query = params.get(\"q\");\n    if (query) {\n      setYtSearchQuery(query);\n      setSearchQuery(query);\n      setSearchState(\"searching\");\n      console.log(\"changing query to\", query);\n    }\n\n    // const unlisten = history.listen(location => {\n    //   // setYtSearchQuery(params.get(\"q\"));\n    //   // we will se the q from params\n    //   // location is an object like window.location\n    //   const path = location.pathname;\n    //   // if (path.slice(1, 7) === \"search\" || path.slice(1, 5) === \"song\") {\n    //   //   setSearchState(\"searched\");\n    //   // } else {\n    //   //   setSearchState(\"home\");\n    //   // }\n    // });\n  }, [setSearchState, setYtSearchQuery]);\n\n  // show loading icon while we fetch the results from api\n\n  const popperResult = () => {\n    switch (searchState) {\n      case \"searching\":\n        return (\n          <Grid\n            style={{ height: \"100vh\" }}\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Grid>\n        );\n      case \"clicked\":\n        return (\n          <AutoSearchResult\n            results={autoSearchData}\n            onSearchSelect={onSearchSelect}\n          />\n        );\n      case \"completed\":\n        setPopper(false);\n        break;\n      default:\n        break;\n    }\n    console.log(\"Function ran\");\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={() => {\n          setSearchState(\"home\");\n          if (history.location.pathname === \"/search\") {\n            history.goBack();\n          }\n          // only go back if u have searched something\n        }}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n      >\n        <ArrowBack />\n      </IconButton>\n      <form style={{ width: \"100%\" }} onSubmit={e => onSearchSubmit(e)}>\n        <InputBase\n          fullWidth\n          placeholder=\"Search...\"\n          autoFocus\n          style={{ color: \"#fff\", paddingLeft: \"16px\" }}\n          value={searchQuery}\n          onChange={onChange}\n          // on click we will show popper\n          onClick={() => {\n            setSearchState(\"clicked\");\n            setPopper(true);\n          }}\n        />\n      </form>\n\n      <Popper\n        className=\"searchPopper\"\n        open={isPopperOpen}\n        anchorEl={document.getElementById(\"navbar\")}\n        popperOptions={{\n          modifiers: {\n            preventOverflow: {\n              padding: 0\n            }\n          }\n        }}\n        placement=\"bottom\"\n      >\n        {popperResult}\n      </Popper>\n    </>\n  );\n};\n\nexport default withRouter(SearchBox);\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GlobalContext } from \"../GlobalState\";\n\nimport SearchBox from \"./SearchBox\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Slide\n} from \"@material-ui/core/\";\n\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nimport { Menu, Search } from \"@material-ui/icons/\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    textAlign: \"center\",\n    width: \"calc(100% - 96px)\"\n  },\n  input: {\n    color: \"#fff\"\n  }\n};\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nfunction SimpleAppBar(props) {\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    console.log(data);\n    dispatch({ type: \"setMenuOpen\", snippet: data });\n  };\n  const setSearchState = React.useCallback(\n    data => {\n      console.log(data);\n      dispatch({ type: \"setSearchState\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  React.useEffect(() => {\n    // if the page is on search we will change the search state\n    const changeAppBar = () => {\n      const path = props.history.location.pathname;\n      if (path === \"/search\") {\n        setSearchState(\"searching\");\n      } else {\n        setSearchState(\"home\");\n      }\n      console.log(\"history change detected in app bar\");\n    };\n\n    changeAppBar();\n    const unlisten = props.history.listen(location => {\n      changeAppBar();\n    });\n  }, [setSearchState, props.history]);\n\n  const toggleSearch = () => {\n    if (searchState === \"home\") {\n      return (\n        <>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={() => setMenuOpen(true)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" style={styles.title}>\n            Ylight Music\n          </Typography>\n          <IconButton\n            onClick={() => setSearchState(\"clicked\")}\n            color=\"inherit\"\n            aria-label=\"Search\"\n          >\n            <Search />\n          </IconButton>\n        </>\n      );\n    } else {\n      return <SearchBox />;\n    }\n  };\n\n  return (\n    <>\n      <HideOnScroll {...props}>\n        <AppBar id=\"navbar\" position=\"sticky\">\n          <Toolbar>{toggleSearch()}</Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </>\n  );\n}\n\nexport default withRouter(SimpleAppBar);\n","import React, { useState } from \"react\";\nimport { IconButton, CircularProgress } from \"@material-ui/core/\";\nimport {\n  PauseCircleFilled,\n  PlayCircleFilled,\n  Pause,\n  PlayArrow\n} from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({ player, audioState, minimized }) => {\n  const togglePlayPause = e => {\n    if (audioState === \"playing\") {\n      player.pause();\n    } else if (audioState === \"paused\") {\n      player.play();\n    }\n    e.stopPropagation();\n  };\n\n  const showPlayPause = () => {\n    if (audioState === \"playing\") {\n      // if the state will be minimized then we will return the nromal pause button\n      if (minimized) {\n        return <Pause style={{ fontSize: \"3em\", opacity: \".8\" }} />;\n      }\n      return <PauseCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\n    } else if (audioState === \"paused\" || audioState === \"loaded\") {\n      if (minimized) {\n        return <PlayArrow style={{ fontSize: \"3em\", opacity: \".8\" }} />;\n      }\n      return <PlayCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\n    } else if (audioState === \"loading\") {\n      return <CircularProgress />;\n    }\n  };\n\n  return (\n    <IconButton\n      size=\"small\"\n      color={minimized ? \"secondary\" : \"primary\"}\n      aria-label=\"Pause\"\n      onClick={togglePlayPause}\n      disableFocusRipple={true}\n      disableRipple={true}\n    >\n      {showPlayPause()}\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton;\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core/\";\nimport { SkipNext } from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({onPlayNext}) => {\n  return (\n    <IconButton color=\"primary\" aria-label=\"Next\" onClick={onPlayNext}>\n      <SkipNext fontSize=\"large\"/>\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton","import React from \"react\";\nimport { IconButton } from \"@material-ui/core/\";\nimport { SkipPrevious } from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({playPrevious}) => {\n  return (\n    <IconButton color=\"primary\" aria-label=\"Pause\" onClick={playPrevious}>\n      <SkipPrevious fontSize=\"large\"/>\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton","import React, { useState, useCallback } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { motion } from \"framer-motion\";\nimport { Avatar, Grid, Typography } from \"@material-ui/core\";\nimport { FavoriteTwoTone } from \"@material-ui/icons\";\nimport circleSvg from \"../../images/dottedCircle.svg\";\nimport { rateSong } from \"../../external/saveSong\";\n\nconst dblTouchTapMaxDelay = 300;\nlet latestTouchTap = {\n  time: 0,\n  target: null\n};\n\nfunction isDblTouchTap(event) {\n  const touchTap = {\n    time: new Date().getTime(),\n    target: event.currentTarget\n  };\n  const isFastDblTouchTap =\n    touchTap.target === latestTouchTap.target &&\n    touchTap.time - latestTouchTap.time < dblTouchTapMaxDelay;\n  latestTouchTap = touchTap;\n  return isFastDblTouchTap;\n}\n\nlet initialPosition;\n\nconst MusicArt = ({ data, rating, audioEl }) => {\n  const swipeUpHandler = useSwipeable({\n    onSwipedUp: e => {\n      dislikeSong();\n    }\n  });\n\n  const [heartStyle, setHeartStyle] = useState({\n    transform: \"scale(0)\"\n  });\n  // const [artContainerStyle, setArtContainerStyle] = useState({\n  //   background: `url(${circleSvg}) no-repeat`,\n  //   padding: \"18px\",\n  //   position: \"relative\",\n  //   // transition: \"transform 100ms\",\n  //   // transform: \"translateY(0)\"\n  // });\n\n  const artContainerStyle = {\n    background: `url(${circleSvg}) no-repeat`,\n    padding: \"18px\",\n    position: \"relative\",\n    zIndex: \"1\"\n  };\n\n  // if its less than 400 width we will use default hq thumbnail\n  const checkImg = e => {\n    if (e.target.naturalWidth < 400) {\n      e.target.src = data.sdThumbnail;\n    }\n  };\n\n  // double tap to like the song\n  const likeSong = useCallback(() => {\n    // run the like function to like provided with song id and rating\n    setHeartStyle({ transform: \"scale(0)\" });\n    setTimeout(() => {\n      setHeartStyle({ transform: \"scale(1)\" });\n    }, 300);\n  }, [setHeartStyle]);\n\n  const dislikeSong = useCallback(() => {\n    rateSong(data.id, \"disliked\");\n    setHeartStyle({ transform: \"scale(0)\" });\n    setTimeout(() => {\n      setHeartStyle({ transform: \"scale(1)\", color: \"#2d3436\" });\n    }, 300);\n  }, [setHeartStyle, data.id]);\n\n  React.useEffect(() => {\n    if (rating === \"liked\") {\n      likeSong();\n    } else if (rating === \"disliked\") {\n      dislikeSong();\n    } else {\n      setHeartStyle({ transform: \"scale(0)\" });\n    }\n  }, [rating, likeSong, dislikeSong, setHeartStyle]);\n\n  // if we find the channel name is before the song title we will remove it\n  //using the regex\n  const shortTitle = data => {\n    // this regex is to remove channel name from song title\n    const re = new RegExp(data.channelTitle + \" - | : \", \"g\");\n\n    return data.title.replace(re, \"\");\n  };\n\n  const getThumbnail = () => {\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\n    if (data.thumbnail) {\n      return window.URL.createObjectURL(data.thumbnail);\n    } else {\n      return data.maxThumbnail;\n    }\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ marginTop: \"40px\" }}\n      onClick={e => {\n        if (isDblTouchTap(e)) {\n          likeSong();\n          rateSong(data.id, \"liked\", audioEl);\n        }\n        // call the like song function on double tap\n      }}\n    >\n      <motion.div\n        className=\"box\"\n        drag\n        dragElastic={true}\n        dragTransition={{ bounceStiffness: 100, bounceDamping: 10 }}\n        dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\n        style={artContainerStyle}\n        {...swipeUpHandler}\n      >\n        <FavoriteTwoTone className={\"songHeart left\"} style={heartStyle} />\n        <FavoriteTwoTone className={\"songHeart right\"} style={heartStyle} />\n        <Avatar\n          className=\"searchThumb\"\n          style={{\n            width: \"215px\",\n            height: \"215px\",\n            boxShadow: \"#0000008c 1px 3px 8px\"\n          }}\n          alt=\"video thumbnail\"\n          src={getThumbnail()}\n          imgProps={{ onLoad: e => checkImg(e) }}\n        />\n      </motion.div>\n      <br />\n      <Typography color=\"primary\" variant=\"h5\" className=\"musicArtTitle\" align=\"center\">\n        {shortTitle(data)}\n      </Typography>\n      <Typography color=\"primary\" variant=\"subtitle1\">\n        {data.channelTitle}\n      </Typography>\n      <br />\n    </Grid>\n  );\n};\n\nexport default MusicArt;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Dialog,\n  Switch,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  FormControl,\n  DialogTitle,\n  Typography\n} from \"@material-ui/core\";\nimport { TimerOff, Timer } from \"@material-ui/icons\";\nimport { CircleSlider } from \"react-circle-slider\";\n\nimport \"./SleepTimerStyle.css\";\n\nconst setSleepTimeToLocalStorage = (time, alwaysOn) => {\n  const sleepTimerSettings = JSON.stringify({ time: time, alwaysOn: alwaysOn });\n\n  localStorage.setItem(\"sleepTimerSettings\", sleepTimerSettings);\n};\n\nconst getSleepTimeFromLocalStoarge = () => {\n  const sleepTimerSettings = localStorage.getItem(\"sleepTimerSettings\");\n  return JSON.parse(sleepTimerSettings);\n};\n\nconst removeSleepTimer = () => {\n  localStorage.removeItem(\"sleepTimerSettings\");\n};\n\nlet timerTimeout;\n\nfunction SleepTimer({ player }) {\n  const [sliderValue, changeSliderValue] = useState(20);\n  const [open, setOpen] = useState(false);\n  const [checkbox, setCheckbox] = useState(false);\n  const [isTimerSet, setIsTimerSet] = useState(false);\n\n  const setTimer = time => {\n    console.log(\"timer has been set with time\", time);\n    clearTimeout(timerTimeout);\n    setIsTimerSet(true);\n    timerTimeout = setTimeout(() => {\n      player.pause(); //pause after music finished\n    }, time * 60 * 1000);\n  };\n\n  useEffect(() => {\n    const sleepTimerObj = getSleepTimeFromLocalStoarge();\n    if (sleepTimerObj) {\n      changeSliderValue(sleepTimerObj.time);\n      setCheckbox(sleepTimerObj.alwaysOn);\n    }\n\n    //only set timer when there is no timer\n    if (sleepTimerObj && sleepTimerObj.alwaysOn) {\n      console.log(sleepTimerObj);\n      setTimer(sleepTimerObj.time);\n    }\n    console.log(sleepTimerObj);\n  }, []);\n\n  const handleSetTimer = () => {\n    setSleepTimeToLocalStorage(sliderValue, checkbox);\n    //   then also set a set timeout\n    // if there is any timer already clear it\n    setOpen(false);\n    setTimer(sliderValue);\n  };\n\n  const handleRemove = () => {\n    removeSleepTimer();\n    setIsTimerSet(false);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {isTimerSet ? (\n        <Timer color=\"primary\" onClick={() => setOpen(true)} />\n      ) : (\n        <TimerOff color=\"primary\" onClick={() => setOpen(true)} />\n      )}\n      <Dialog\n        style={{ zIndex: 1400 }}\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <Typography\n          variant=\"h5\"\n          color=\"primary\"\n          align=\"center\"\n          style={{ marginTop: \"10px\" }}\n        >\n          Pause Music After\n        </Typography>\n        <div className=\"container\">\n          <div className=\"textContainer\">\n            {sliderValue}\n            <div className=\"minute\">MINUTES</div>\n          </div>\n          <CircleSlider\n            value={sliderValue}\n            stepSize={5}\n            onChange={value => changeSliderValue(value)}\n            size={300}\n            max={120}\n            gradientColorFrom=\"#ec008c\"\n            gradientColorTo=\"#fc6767\"\n            knobRadius={25}\n            progressWidth={30}\n            circleWidth={30}\n          />\n        </div>\n\n        <DialogActions>\n          <FormControlLabel\n            value=\"Always On\"\n            control={\n              <Switch\n                checked={checkbox}\n                onChange={e => setCheckbox(e.target.checked)}\n                value=\"checked always on\"\n                color=\"primary\"\n              />\n            }\n            label=\"ALWAYS\"\n            labelPlacement=\"end\"\n            style={{ color: \"#e91e63\" }}\n          />\n          <Button color=\"primary\" onClick={handleRemove}>\n            Remove\n          </Button>\n\n          <Button color=\"primary\" onClick={handleSetTimer}>\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default SleepTimer;\n","import React, { useState, useEffect } from \"react\";\nimport { withStyles, Typography, Grid, Slider } from \"@material-ui/core/\";\nimport { PauseCircleFilled } from \"@material-ui/icons/\";\n\nconst PrettoSlider = withStyles({\n  root: {\n    height: 6\n  },\n  thumb: {\n    height: 16,\n    width: 16,\n    marginTop: -5.3,\n    marginLeft: -8,\n    \"&::before\": {\n      content: \"''\",\n      height: \"inherit\",\n      width: \"inherit\",\n      position: \"absolute\",\n      transform: \"scale(1.6)\",\n      borderRadius: \"50px\",\n      border: \"1px solid\"\n    }\n  },\n  track: {\n    height: 6,\n    borderRadius: 4\n  },\n  rail: {\n    height: 6,\n    borderRadius: 4\n  }\n})(Slider);\n\nconst MiniSlider = withStyles({\n  root: {\n    height: 4,\n    position: \"relative\",\n    bottom: \"16px\",\n    color: \"#FFFDFD\",\n    padding: 0\n  },\n  thumb: {\n    display: \"none\"\n  },\n  track: {\n    height: 4,\n    borderRadius: 0\n  },\n  rail: {\n    height: 4,\n    borderRadius: 0\n  }\n})(Slider);\n\nconst formatTime = secs => {\n  let minutes = Math.floor(secs / 60);\n  let seconds = Math.ceil(secs - minutes * 60);\n\n  if (seconds < 10) seconds = `0${seconds}`;\n\n  return `${minutes}:${seconds}`;\n};\n\nconst TimelineController = ({ audioState, player, minimized }) => {\n  const [value, setValue] = useState(50);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    if (player) {\n      setCurrentTime(player.currentTime);\n    }\n    // we will update the time of player every 800ms\n    let setTimeInterval;\n    if (audioState === \"playing\") {\n      setTimeInterval = setInterval(() => {\n        setCurrentTime(player.currentTime);\n        console.log()\n      }, 800);\n    } else {\n      clearInterval(setTimeInterval);\n    }\n    return () => clearInterval(setTimeInterval);\n  }, [audioState, player]);\n\n  const handleChange = (event, newValue) => {\n    player.currentTime = newValue;\n    setCurrentTime(newValue);\n  };\n\n  const showDuration = () => {\n    if (player) {\n      if (player.duration) {\n        return formatTime(player.duration);\n      } else {\n        return \"0:00\";\n      }\n    } else {\n      return 0;\n    }\n  };\n\n  // condition rendering\n  if (minimized) {\n    return (\n      <MiniSlider value={currentTime} max={player ? player.duration : 0} />\n    );\n  } else {\n    return (\n      <div style={{ margin: \"0 auto\", width: \"90%\" }}>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Typography variant=\"body1\" color=\"primary\">\n            {formatTime(currentTime)}\n          </Typography>\n          <Typography variant=\"body1\" color=\"primary\">\n            {showDuration()}\n          </Typography>\n        </Grid>\n\n        <PrettoSlider\n          value={currentTime}\n          onChange={handleChange}\n          max={player ? player.duration : 0}\n        />\n      </div>\n    );\n  }\n};\n\nexport default TimelineController;\n","import React, { useState } from \"react\";\nimport { IconButton, Grid, Slider } from \"@material-ui/core/\";\nimport { VolumeUp } from \"@material-ui/icons/\";\n\nconst VolumeController = ({ player, setPlayerState }) => {\n  const [volume, setVolume] = useState(100);\n\n  const volumeChange = (e, newVal) => {\n    setVolume(newVal);\n    player.volume = newVal / 100;\n    //\n  };\n\n\n  return (\n\n      <Grid container spacing={1} style={{ maxWidth: \"200px\" }}>\n        <Grid item>\n          <VolumeUp color=\"primary\" />\n        </Grid>\n        <Grid item xs={3}>\n          <Slider value={volume} onChange={volumeChange} />\n        </Grid>\n      </Grid>\n  );\n};\n\nexport default VolumeController;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nimport {\n  List,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n  Divider,\n  LinearProgress\n} from \"@material-ui/core\";\n\nimport {\n  MusicVideo,\n  LibraryMusic,\n  Shuffle,\n  Repeat,\n  KeyboardArrowUp,\n  KeyboardArrowDown,\n  RepeatOne\n} from \"@material-ui/icons\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nlet renderResult;\n\n// written by @bushblade\nconst shuffle = arry =>\n  arry.reduce(\n    (acc, _, i) => {\n      const rnd = Math.floor(Math.random() * acc.length),\n        temp = acc[i];\n      acc[i] = acc[rnd];\n      acc[rnd] = temp;\n      return acc;\n    },\n    [...arry]\n  );\n\nconst RelatedVideos = ({\n  toggleMaxPlaylist,\n  setPlaylist,\n  playerState,\n  relatedVideos,\n  setRelatedVideos,\n  setIsRepeatOn,\n  isRepeatOn\n}) => {\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const handleShuffleClick = () => {\n    setRelatedVideos(shuffle(relatedVideos));\n  };\n\n  const spring = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 300\n  };\n  const handleClick = video => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: video.snippet.title,\n      channelTitle: video.snippet.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n    setPlaylist();\n  };\n\n  if (relatedVideos.length > 1) {\n    renderResult = relatedVideos.map(song => {\n      return (\n        <motion.li key={song.id.videoId} positionTransition={spring}>\n          <ListItem\n            // key={song.id.videoId}\n            button\n            onClick={() => handleClick(song)}\n            // component={Link}\n            // replace\n            // to={{ pathname: \"/play\", search: `?id=${song.id.videoId}` }}\n          >\n            <ListItemIcon>\n              <MusicVideo style={{ color: \"#fff\" }} />\n            </ListItemIcon>\n            <ListItemText\n              primary={song.snippet.title.slice(0, 40)}\n              secondary={song.snippet.channelTitle.slice(0, 40)}\n            />\n          </ListItem>\n        </motion.li>\n      );\n    });\n  } else {\n    return <LinearProgress />;\n  }\n\n  const returnPlaylistExpandBtn = () => {\n    if (playerState === \"playlist\") {\n      return <KeyboardArrowDown onClick={toggleMaxPlaylist} />;\n    } else {\n      return <KeyboardArrowUp onClick={toggleMaxPlaylist} />;\n    }\n  };\n\n  return (\n    <div className=\"RelatedVideoContainer\">\n      <Grid\n        className={\"playlistHeader\"}\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"space-between\"\n      >\n        <LibraryMusic />\n        <Typography variant=\"h6\">Coming Next</Typography>\n        <Shuffle onClick={handleShuffleClick} />\n        {/* this will show the repeat button and repeat the song */}\n        {isRepeatOn ? (\n          <RepeatOne onClick={setIsRepeatOn} />\n        ) : (\n          <Repeat onClick={setIsRepeatOn} />\n        )}\n        {returnPlaylistExpandBtn()}\n      </Grid>\n      <List dense={true}>{renderResult}</List>\n    </div>\n  );\n};\n\nexport default RelatedVideos;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  IconButton,\n  Grid,\n  Slider,\n  LinearProgress,\n  makeStyles,\n  withStyles\n} from \"@material-ui/core/\";\n\nimport {\n  ExpandMore,\n  GetApp,\n  Reply,\n  DoneOutline,\n  Done,\n  AlarmOff\n} from \"@material-ui/icons/\";\nimport VolumeController from \"./VolumeController\";\nimport { useSongMethods } from \"../RenderDatabase\";\nimport { downloadSong } from \"../../external/saveSong\";\nimport SleepTimer from './SleepTimer'\nimport { GlobalContext } from \"../GlobalState\";\n\nconst DownloadLoader = withStyles({\n  root: {\n    height: 2,\n    width: \"70%\",\n    margin: \"0 auto\",\n    transform: \"translateY(-10px)\"\n  }\n})(LinearProgress);\n\nconst TopBar = ({ song, player, setPlayerState, history }) => {\n  const { snackbarMsg } = useContext(GlobalContext);\n  const [isSongDownloaded, setSongDownloaded] = useState(false);\n  const [isSongDownloading, setSongDownloading] = useState(false);\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent\n  } = useSongMethods();\n\n  useEffect(() => {\n    if (snackbarMsg === \"Song Downloaded\" || song.audio) {\n      setSongDownloaded(true);\n      setSongDownloading(false);\n    }\n  }, [snackbarMsg]);\n  // if the song is downloaded we will change\n\n  // share prompt using chrome web api\n  const shareSong = () => {\n    if (navigator.share) {\n      navigator\n        .share({\n          title: \"Share This Song\",\n          text: `Hey Listen to ${song.title} on Ylight Music`,\n          url: window.location.href //get the current window url\n        })\n        .then(() => console.log(\"Successful share\"))\n        .catch(error => console.log(\"Error sharing\", error));\n    }\n  };\n\n  const minimizePlayer = () => {\n    history.goBack()\n    setPlayerState(\"minimized\");\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"space-between\"\n      direction=\"row\"\n      style={{\n        padding: \" 0 10px\",\n        marginTop: \"10px\",\n        position: \"absolute\",\n        top: \"0\"\n      }}\n    >\n      <VolumeController player={player} />\n      {deleteDialogComponent}\n      <Reply\n        style={{ transform: \" scaleX(-1) translateY(-2px)\" }}\n        onClick={shareSong}\n        color=\"primary\"\n      />\n      \n      <SleepTimer player={player}/>\n\n      <div>\n        {isSongDownloaded ? (\n          <DoneOutline\n            color=\"primary\"\n            onClick={() => handleRemoveSong(song.id)}\n          /> //song will be removed\n        ) : (\n          <>\n            <GetApp\n              color=\"primary\"\n              onClick={() => {\n                handleDownload(song.id);\n                setSongDownloading(true);\n              }}\n            />\n          </>\n        )}\n        {isSongDownloading ? <DownloadLoader color=\"primary\" /> : null}\n        {/* if the song is downloading we will show loading */}\n      </div>\n\n      <ExpandMore\n        onClick={minimizePlayer}\n        color=\"primary\"\n        fontSize=\"large\"\n        style={{ transform: \"translateY(-7px)\" }}\n      />\n    </Grid>\n  );\n};\n\nexport default TopBar;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { SkipNext, Close } from \"@material-ui/icons\";\nimport PlayPauseButton from \"./PlayPauseButton\";\nimport \"./MiniMusicStyle.css\";\n\nconst styles = {};\n\nconst MiniMuiscArt = ({ playPause, data, playNext, emptyPlayer }) => {\n  const getThumbnail = () => {\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\n    if (data.thumbnail) {\n      return window.URL.createObjectURL(data.thumbnail);\n    } else {\n      return data.sdThumbnail;\n    }\n  };\n\n  return (\n    <div className={\"mainContainer\"}>\n      <div className={\"overflow-hidden\"}>\n        <div className=\"details\">\n          <Typography variant=\"body1\">{data.title}</Typography>\n          <Typography variant=\"body2\">{data.channelTitle}</Typography>\n        </div>\n        <div className=\"buttons\">\n          <SkipNext onClick={playNext} />\n          <Close onClick={emptyPlayer} />\n        </div>\n        <div className={\"miniArtContainer\"}>\n          <div className={\"mainArt\"}>\n            <img\n              className={\"miniArtImg\"}\n              src={getThumbnail()}\n              alt=\"music art\"\n            />\n            <PlayPauseButton\n              player={playPause.player}\n              minimized={playPause.minimized}\n              audioState={playPause.audioState}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MiniMuiscArt;\n","import axios from \"axios\";\n\nconst country_code = localStorage.getItem(\"country_code\");\n\n// const key = \"02924c9a5a777f4d4854a45a326432c6\";\n\nconst GeoAPI = \"https://ipapi.co/json/\";\n\nconst fetchCountry = async () => {\n  const res = await axios.get(GeoAPI, { mode: \"no-cors\" });\n  //   set the current country code in local stoarge\n  localStorage.setItem(\"country_code\", res.data.country);\n};\n\nif (!country_code) {\n  // if country is not set then only set it\n  fetchCountry();\n}\n","import React, { useEffect, useContext, useState, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSwipeable } from \"react-swipeable\";\nimport PlayPauseButton from \"./PlayPauseButton\";\nimport NextButton from \"./NextButton\";\nimport PreviousButton from \"./PreviousButton\";\nimport MusicArt from \"./MusicArt\";\nimport TimelineController from \"./TimelineController\";\nimport TopBar from \"./TopBar\";\nimport MiniMusicArt from \"./MiniMusicArt\";\nimport RelatedVideos from \"../RelatedVideos\";\nimport getAudioLink from \"../../apis/getAudioLink\";\nimport youtubeSearch from \"../../apis/youtubeSearch\";\nimport { updatePlayingSong } from \"../../external/saveSong\";\n\nimport \"../../external/saveCountry\";\n\nimport \"../../style.css\";\n\nimport { GlobalContext } from \"../GlobalState\";\n\n// window.onbeforeunload = function() {\n//   return 'You have unsaved changes!';\n// }\nlet relatedVideosVar;\n\nconst MainPlayer = ({ location, history }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ currentVideoSnippet, themeSelectValue }, dispatch] = useContext(\n    GlobalContext\n  );\n\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [isItFromPlaylist, setIsItFromPlaylist] = useState(false);\n  //\n  const [audioState, setAudioState] = useState(null);\n  // there will be 4 states\n  // loading, loaded, playing, paused\n\n  const [playerState, setPlayerState] = useState(null);\n  // there will be 3 states\n  // maximized, minimized, playlist\n\n  const [minimized, setMinimized] = useState(true);\n  const [isRepeatOn, setIsRepeatOn] = useState(false);\n  const [rating, setRating] = useState(\"none\");\n  const [isNextFromMini, setIsNextFromMini] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const body = document.querySelector(\"body\");\n\n  const audioPlayer = useRef();\n  const player = audioPlayer.current;\n  const setupMediaSessions = () => {\n    if (\"mediaSession\" in navigator) {\n      console.log(\"navigator setupped\");\n\n      navigator.mediaSession.metadata = new window.MediaMetadata({\n        title: currentVideoSnippet.title,\n        artist: currentVideoSnippet.channelTitle,\n        artwork: [\n          {\n            src: currentVideoSnippet.sdThumbnail,\n            sizes: \"512x512\",\n            type: \"image/png\"\n          }\n        ]\n      });\n      navigator.mediaSession.setActionHandler(\"play\", () => {\n        /* Code excerpted. */\n        playAudio();\n      });\n      navigator.mediaSession.setActionHandler(\"pause\", () => {\n        /* Code excerpted. */\n        audioPlayer.current.pause();\n      });\n      navigator.mediaSession.setActionHandler(\"previoustrack\", () => {\n        playPrevious();\n      });\n      navigator.mediaSession.setActionHandler(\"nexttrack\", () => {\n        playNext();\n      });\n    }\n  };\n\n  const playAudio = () => {\n    audioPlayer.current\n      .play()\n      .then(_ => {\n        // Automatic playback started!\n        // Show playing UI.\n        console.log(\"audio played auto\");\n        setupMediaSessions();\n      })\n      .catch(error => {\n        // Auto-play was prevented\n        // Show paused UI.\n        console.log(\"playback prevented\");\n        setAudioState(\"paused\");\n      });\n  };\n\n  useEffect(() => {\n    console.log(\"state changed triggedred\");\n    const getAudio = async data => {\n      // audioPlayer.current.src = \"\";\n      // maximize the player every time id changes\n      // only if playlist is not open\n      if (playerState !== \"playlist\" && !isNextFromMini) {\n        setPlayerState(\"maximized\");\n        //\n        console.log(\"maximizing here yar and state is\", playerState);\n      }\n\n      setTimeout(() => {\n        setIsNextFromMini(false);\n        // change it back to false\n      }, 200);\n\n      setAudioState(\"loading\");\n      const res = await getAudioLink.get(\"/song\", {\n        params: { id: data }\n      });\n\n      // set the audio data\n      const proxyURL = \"https://server.ylight.xyz/proxy/\";\n      audioPlayer.current.src = res.data;\n      playAudio();\n\n      // var audioContext = new AudioContext();\n\n      // var track = audioContext.createMediaElementSource(audioPlayer.current);\n      // track.connect(audioContext.destination);\n    };\n\n    if (currentVideoSnippet.audio) {\n      console.log(\"yes its downloaded we will play from local file\");\n      // maximize the player every time id changes\n\n      setPlayerState(\"maximized\");\n      setAudioState(\"loading\");\n      audioPlayer.current.src = window.URL.createObjectURL(\n        currentVideoSnippet.audio\n      );\n      playAudio();\n    } else if (currentVideoSnippet.id) {\n      getAudio(currentVideoSnippet.id);\n    }\n\n    if (currentVideoSnippet.id) {\n      const searchRelated = async () => {\n        const res = await youtubeSearch.get(\"/search\", {\n          params: {\n            relatedToVideoId: currentVideoSnippet.id,\n            maxResults: 10\n          }\n        });\n        setRelatedVideos(res.data.items);\n      };\n\n      // if its not from the mini next button then only change history\n      if (!isNextFromMini) {\n        // if the click is not from playlist then only we will search for realated video\n        if (!isItFromPlaylist) {\n          // console.log(\"searching for related vids\", relatedVideos);\n          // if player is in playlist mode we will just replace history else push it\n          if (location.pathname !== \"/play\") {\n            // prevent duplicating history\n            history.push(`/play?id=${currentVideoSnippet.id}`);\n          }\n\n          searchRelated();\n        } else {\n          history.replace(`/play?id=${currentVideoSnippet.id}`);\n          setIsItFromPlaylist(false);\n        }\n      }\n\n      console.log(currentVideoSnippet);\n    }\n\n    // set rating to none when we load new song\n    setRating(\"none\");\n  }, [currentVideoSnippet, setIsItFromPlaylist]);\n\n  // useEffect(() => {\n  //   console.log(\"from playlist\", isItFromPlaylist);\n  // }, [isItFromPlaylist]);\n\n  useEffect(() => {\n    relatedVideosVar = relatedVideos;\n    console.log(\"related\", relatedVideos);\n  }, [relatedVideos]);\n\n  useEffect(() => {\n    console.log(\"isnext state\", isNextFromMini);\n  }, [isNextFromMini]);\n\n  const setAudioSrcAndPlay = async id => {\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: id }\n    });\n\n    // set the audio data\n    audioPlayer.current.src = res.data;\n    playAudio();\n  };\n\n  const setVideoSnippet = video => {\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: video.snippet.title,\n      channelTitle: video.snippet.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/hqdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n\n    // if window is minimized then only we will run this function\n    if (document.hidden) {\n      setAudioSrcAndPlay(video.id.videoId);\n    }\n  };\n\n  const playNext = () => {\n    // also set this is from playlist\n    setIsItFromPlaylist(true);\n    console.log(\"play next related videos\", relatedVideos);\n    // find the index of playing song in the playlist\n    const currentIndex = relatedVideosVar.findIndex(\n      video => video.id.videoId === currentVideoSnippet.id\n    );\n    console.log(\"the current index is\", currentIndex);\n\n    let video;\n    console.log(\"hey we will play next song\");\n    video = relatedVideosVar[currentIndex + 1]; //we will play the next song\n\n    setVideoSnippet(video);\n  };\n\n  const playPrevious = () => {\n    setIsItFromPlaylist(true);\n\n    // if the player time is greater than 5 sec we will move the time to 0\n    if (player.currentTime > 5) {\n      player.currentTime = 0;\n    } else {\n      const currentIndex = relatedVideosVar.findIndex(\n        video => video.id.videoId === currentVideoSnippet.id\n      );\n      let video;\n      if (currentIndex !== -1) {\n        video = relatedVideosVar[currentIndex - 1]; //we will play the next song\n        setVideoSnippet(video);\n      } else {\n        player.currentTime = 0;\n      }\n    }\n  };\n\n  let playerStyle = {\n    position: \"fixed\",\n    right: 0,\n    bottom: 0,\n    background: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1400,\n    display: \"inline block\",\n    transition: \"all .3s ease\"\n  };\n\n  if (playerState === \"minimized\") {\n    playerStyle.transform = \"translateY(calc(100% - 106px))\";\n    playerStyle.zIndex = 0;\n    // if theme is not dark then only apply the pink style\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    } else {\n      playerStyle.background = \"#e91e63\";\n    }\n    // playerStyle.bottom = \"48px\";\n    // calculate the top height and we are subtracting 148px becz\n    // 48 is the value of menu bar and 100px is minimized height\n    // make body overflow scroll 😝\n    body.style.overflow = \"auto\";\n  }\n\n  if (playerState === \"maximized\") {\n    // make body overflow hidden 🙈\n    body.style.overflow = \"hidden\";\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    }\n  }\n\n  if (playerState === \"playlist\") {\n    playerStyle.transform = \"translateY(-418px)\";\n  }\n\n  const expandPlayer = () => {\n    if (playerState === \"minimized\") {\n      setPlayerState(\"maximized\");\n      setMinimized(true);\n      history.push({\n        pathname: \"/play\",\n        search: `?id=${currentVideoSnippet.id}`,\n        state: { modal: true }\n      });\n    }\n  };\n\n  const toggleMaxPlaylist = () => {\n    if (playerState === \"playlist\") {\n      setPlayerState(\"maximized\");\n    } else {\n      setPlayerState(\"playlist\");\n    }\n    console.log(\"Maximize the playlist\");\n  };\n\n  const updateSongDB = async () => {\n    const rating = await updatePlayingSong(currentVideoSnippet);\n    //  it will update song on db and return the rating\n    setRating(rating);\n    console.log(rating);\n  };\n\n  // this will be fired when song is ended\n  const songEnded = () => {\n    // if repeat is false we will play next else just set the time to 0\n    if (!isRepeatOn) {\n      playNext();\n    } else {\n      audioPlayer.current.currentTime = 0;\n      playAudio();\n    }\n  };\n\n  let initPosition = 0;\n  const containerRef = useRef(null);\n\n  const swipeHandlerMaximized = useSwipeable({\n    onSwipedDown: e => {\n      setPlayerState(\"minimized\");\n      history.goBack();\n    },\n    onSwiping: e => {\n      // console.log(e);\n      // getting the event for touches to extract the position\n      if (initPosition === 0) {\n        initPosition = e.event.changedTouches[0].screenY;\n      }\n\n      const screenY = e.event.changedTouches[0].screenY;\n      let positionDifference = Math.round(screenY - initPosition);\n      if (positionDifference < 1) {\n        positionDifference = 0;\n      }\n\n      const containerRefStyle = containerRef.current.style;\n      containerRefStyle.transform = `translateY(${positionDifference}px)`;\n      containerRefStyle.transition = \"none\";\n    },\n    onSwiped: e => {\n      initPosition = 0;\n      containerRef.current.style = \"\";\n      // we will make the initial position 0 again after user leaves the screen\n    },\n    onSwipedUp: e => {\n      if (playerState === \"minimized\") {\n        setPlayerState(\"maximized\");\n      }\n    },\n    onSwipedRight: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playNext();\n      }, 250);\n    },\n    onSwipedLeft: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playPrevious();\n      }, 250);\n    }\n  });\n\n  const swipeHandlerMin = useSwipeable({\n    onSwipedUp: e => {\n      expandPlayer();\n    }\n  });\n\n  useEffect(() => {\n    if (location.pathname === \"/play\" && !currentVideoSnippet.id) {\n      console.log(\"history is in play fetching song\");\n\n      fetchAndSetCurrentVideoSnippet(params.get(\"id\")); // math will give the song id from\n    }\n    // we will only change if its push  otherwise while changing song from playlist changes the state\n\n    // Listen for changes to the current location.\n    const unlisten = history.listen(location => {\n      // location is an object like window.location\n      if (location.pathname === \"/play\") {\n        // we will only change if its push  otherwise while changing song from playlist changes the state\n        if (history.action !== \"REPLACE\") {\n          setPlayerState(\"maximized\");\n          console.log(\"set player state to maximized\");\n        }\n      } else {\n        setPlayerState(\"minimized\");\n        console.log(\"set player state to minimized\");\n      }\n      console.log(history);\n    });\n  }, [history]);\n\n  useEffect(() => {\n    console.log(playerState);\n  }, [playerState]);\n\n  const returnMinMaxClass = () => {\n    if (playerState === \"minimized\") {\n      return \"playerMinimized\";\n    } else if (playerState === \"playlist\") {\n      return \"playerPlaylist\";\n    }\n  };\n\n  const returnMaximizedPlayer = () => {\n    if (playerState === \"maximized\" || playerState === \"playlist\") {\n      return (\n        <>\n          <Grid\n            container\n            direction=\"column\"\n            className=\"main-player-inner\"\n            style={{\n              height: \" calc(100vh - 46px)\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <TopBar\n              song={currentVideoSnippet}\n              player={player}\n              setPlayerState={setPlayerState}\n              history={history}\n            />\n            <div {...swipeHandlerMaximized} className=\"musicArtContainer\">\n              <MusicArt\n                data={currentVideoSnippet}\n                rating={rating}\n                audioEl={player}\n              />\n            </div>\n            <TimelineController audioState={audioState} player={player} />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"center\"\n              style={{ maxWidth: \"290px\", height: \"80px\", margin: \"0 auto\" }}\n            >\n              <PreviousButton playPrevious={playPrevious} />\n              <PlayPauseButton player={player} audioState={audioState} />\n              <NextButton onPlayNext={playNext} />\n            </Grid>\n          </Grid>\n          <RelatedVideos\n            toggleMaxPlaylist={toggleMaxPlaylist}\n            setPlaylist={() => setIsItFromPlaylist(true)}\n            playerState={playerState}\n            relatedVideos={relatedVideos}\n            setRelatedVideos={data => setRelatedVideos(data)}\n            isRepeatOn={isRepeatOn}\n            // this will set the repeat setting\n            setIsRepeatOn={() => {\n              setIsRepeatOn(!isRepeatOn);\n            }}\n          />\n        </>\n      );\n    }\n  };\n\n  const returnMinimizedPlayer = () => {\n    if (playerState === \"minimized\" && currentVideoSnippet.id) {\n      return (\n        <div {...swipeHandlerMin}>\n          <MiniMusicArt\n            // we are making an object for props we will pass it to play pause button through mini music art\n            playPause={{\n              player: player,\n              minimized: minimized,\n              audioState: audioState\n            }}\n            playNext={e => {\n              e.stopPropagation();\n              setIsNextFromMini(true);\n              playNext();\n            }}\n            data={currentVideoSnippet}\n            emptyPlayer={e => {\n              e.stopPropagation();\n              setCurrentVideoSnippet([]);\n            }}\n          />\n          <TimelineController\n            audioState={audioState}\n            player={player}\n            minimized={minimized}\n          />\n        </div>\n      );\n    }\n  };\n\n  const fetchAndSetCurrentVideoSnippet = id => {\n    youtubeSearch\n      .get(\"videos\", {\n        params: {\n          id: id\n        }\n      })\n      .then(res => {\n        const item = res.data.items[0];\n        console.log(currentVideoSnippet);\n        setCurrentVideoSnippet({\n          id: item.id,\n          title: item.snippet.title,\n          channelTitle: item.snippet.channelTitle,\n          maxThumbnail: `https://img.youtube.com/vi/${item.id}/maxresdefault.jpg`,\n          sdThumbnail: `https://img.youtube.com/vi/${item.id}/sddefault.jpg`\n          // this is the url of the max resolution of thumbnail\n        });\n      });\n  };\n\n  if (!currentVideoSnippet.id) {\n    return null;\n  }\n\n  return (\n    <div\n      // drag=\"y\"\n      // dragConstraints={{ top: 0, bottom: 600 }}\n      ref={containerRef}\n      // style={playerStyle}\n      onClick={expandPlayer}\n      className={\"mediaPlayerContainer \" + returnMinMaxClass()}\n    >\n      {returnMaximizedPlayer()}\n      {returnMinimizedPlayer()}\n      <audio\n        // onTimeUpdate={timeUpdate}\n        onLoadStart={() => {\n          setAudioState(\"loading\");\n        }}\n        id=\"audio-element\"\n        onLoadedData={updateSongDB}\n        // crossOrigin=\"anonymous\"\n        onPlay={() => setAudioState(\"playing\")}\n        onPlaying={() => setAudioState(\"playing\")}\n        onPause={() => setAudioState(\"paused\")}\n        onEnded={songEnded}\n        autoPlay\n        ref={audioPlayer}\n        // type=\"audio/mp4\"\n      />\n    </div>\n  );\n};\n\nexport default MainPlayer;\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  Suspense,\n  lazy\n} from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Route,\n  Link,\n  Switch\n} from \"react-router-dom\";\n\nimport { AnimatePresence } from \"framer-motion\";\nimport {\n  Tabs,\n  Tab,\n  withStyles,\n  Grid,\n  CircularProgress\n} from \"@material-ui/core\";\n\n\nimport {\n  Home,\n  Favorite,\n  VideoLibrary,\n  History,\n  GetApp\n} from \"@material-ui/icons/\";\n\nimport { GlobalContext } from \"./GlobalState\";\nimport {\n  getHistory,\n  getLikedSongs,\n  getDownloadedSongs,\n  removeDownloadingState,\n  db\n} from \"../external/saveSong\";\n\nimport SettingsPage from \"./sections/SettingsPage\";\n// import the db from save song\nimport MainPlayer from \"../components/player/MainPlayer\";\n// pages\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\nconst RenderDatabase = lazy(() => import(\"./RenderDatabase\"));\nconst SearchResult = lazy(() => import(\"./SearchResult\"));\nconst HomePage = lazy(() => import(\"./sections/HomePage\"));\nconst FeedbackForm = lazy(() => import(\"./sections/FeedbackForm\"));\nconst PrivacyPage = lazy(() => import(\"./sections/PrivacyPage\"));\nconst DonatePage = lazy(() => import(\"./sections/DonatePage\"));\nconst ContributorsPage = lazy(() => import(\"./sections/ContributorsPage\"));\n\n// custom styling the tab menus\nconst CustomTab = withStyles({\n  root: {\n    background: \"#e91e63\",\n    position: \"fixed\",\n    bottom: \"0\",\n    padding: 0,\n    width: \"100%\",\n    zIndex: 1300\n  },\n  indicator: {\n    display: \"none\"\n  },\n  labelIcon: {\n    margin: 0\n  }\n})(Tabs);\n\nconst CustomTabs = withStyles({\n  root: {\n    color: \"#FFB2C1\",\n    fontSize: \".75rem\",\n    margin: 0,\n\n    \"&:hover\": {\n      color: \"#ffffffed\",\n      opacity: 1\n    },\n    \"&$selected\": {\n      color: \"#fff\"\n    },\n    \"&:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n\n  selected: {}\n})(Tab);\n\nlet deferredPrompt = undefined;\nlet previousLocation;\n\nwindow.addEventListener(\"beforeinstallprompt\", e => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n});\n\nconst CurrentSection = ({ history, location }) => {\n  const [{ currentVideoSnippet, searchResult }] = useContext(GlobalContext);\n  console.log(currentVideoSnippet);\n\n  const [songsHistoryState, setSongsHistory] = useState([]);\n  const [songsLikedState, setSongsLiked] = useState([]);\n  const [songsDownloadedState, setSongsDownloaded] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  const [updateCount, setUpdateCount] = useState(0);\n  const [redirectState, setRedirectState] = useState(null);\n\n  const circularLoader = (\n    <Grid\n      style={{ height: \"100vh\" }}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n\n  function handleChange(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  const fetchSongs = useCallback(async () => {\n    //it's same as the orders of our tabs\n    switch (tabValue) {\n      case 1:\n        setSongsLiked(await getLikedSongs());\n        break;\n\n      case 2:\n        setSongsDownloaded(await getDownloadedSongs());\n        break;\n\n      case 3:\n        setSongsHistory(await getHistory());\n        break;\n\n      default:\n        break;\n    }\n  }, [tabValue]);\n  //\n  useEffect(() => {\n    fetchSongs();\n  }, [tabValue, fetchSongs]);\n\n  useEffect(() => {\n    fetchSongs();\n    console.log(\"fetching the songs\");\n  }, [updateCount, fetchSongs]);\n\n  useEffect(() => {\n    db.on(\"changes\", () => {\n      setUpdateCount(c => c + 1);\n    });\n    // will remove all the songs which are downloading in the first place\n    removeDownloadingState();\n\n    const isThisNewUser = localStorage.getItem(\"isThisNew\");\n    if (isThisNewUser === \"no\") {\n      setRedirectState(true);\n    }\n    // if this is not a new user redirect it to home\n    previousLocation = location;\n    history.listen(location => {\n      if (location.pathname !== \"/play\") {\n        previousLocation = location;\n        console.log(previousLocation);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    // we will redirect everytime user comes to root page\n    if (redirectState && history.location.pathname === \"/\") {\n      history.replace(\"/home\");\n    }\n\n    // if the location is not play then we will push new location\n  }, [setRedirectState, history, redirectState]);\n\n  const checkPrevLocation = () => {\n    if (location.pathname === \"/play\") {\n      return previousLocation;\n    } else {\n      return location;\n    }\n  };\n\n  // we will load the homepage with all the playlists\n  const continueToHome = () => {\n    localStorage.setItem(\"isThisNew\", \"no\");\n    history.replace(\"/home\");\n\n    if (deferredPrompt) {\n      // show the prompt to install app\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then(choiceResult => {\n        if (choiceResult.outcome === \"accepted\") {\n          console.log(\"User accepted the A2HS prompt\");\n        } else {\n          console.log(\"User dismissed the A2HS prompt\");\n        }\n        deferredPrompt = null;\n      });\n    }\n  };\n\n  const returnMainPlayer = props => {\n    // we will return the main player if the path is not the \"/\"\n\n    if (window.location.pathname !== \"/\") {\n      return <MainPlayer {...props} />;\n    } else {\n      return null;\n    }\n  };\n\n  // the set tab value will keep the tab active on their route\n  // there are 4 tabs so there will be 3 indexes\n  return (\n    <div>\n      <Suspense fallback={circularLoader}>\n        <Switch location={checkPrevLocation()}>\n          <Route\n            exact\n            path=\"/\"\n            render={props => {\n              return <LoginPage continueToHome={continueToHome} />;\n            }}\n          />\n          <Route\n            path=\"/search\"\n            render={props => <SearchResult videos={searchResult} />}\n          />\n          <Route\n            path=\"/home\"\n            render={props => {\n              setTabValue(0);\n              return <HomePage />;\n            }}\n          />\n          <Route\n            path=\"/liked\"\n            render={props => {\n              setTabValue(1);\n              return (\n                <RenderDatabase\n                  songs={songsLikedState}\n                  {...props}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/downloads\"\n            render={props => {\n              setTabValue(2);\n              return (\n                <RenderDatabase\n                  songs={songsDownloadedState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/history\"\n            render={props => {\n              setTabValue(3);\n              return (\n                <RenderDatabase\n                  songs={songsHistoryState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/app\"\n            render={props => {\n              window.location.replace(\n                \"https://play.google.com/store/apps/details?id=com.ylightmusic.app\"\n              );\n              return <div>Redirecting you to play store</div>;\n            }}\n          />\n\n          <Route path=\"/settings\" component={SettingsPage} />\n          <Route path=\"/privacy\" component={PrivacyPage} />\n\n          <Route path=\"/feedback\" component={FeedbackForm} />\n          <Route path=\"/donate\" component={DonatePage} />\n          <Route path=\"/contributors\" component={ContributorsPage} />\n        </Switch>\n        <Route path=\"/\" render={props => returnMainPlayer(props)} />\n\n        <div style={{ height: currentVideoSnippet.id ? \"100px\" : \"50px\" }} />\n      </Suspense>\n      {/* if the player is on then return 100px else 50px*/}\n      <CustomTab\n        value={tabValue}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <CustomTabs\n          icon={<Home />}\n          aria-label=\"Home\"\n          component={Link}\n          to=\"/home\"\n          label=\"Home\"\n        />\n\n        <CustomTabs\n          icon={<Favorite />}\n          aria-label=\"Liked\"\n          component={Link}\n          to=\"/liked\"\n          label=\"Liked\"\n        />\n\n        <CustomTabs\n          icon={<GetApp />}\n          aria-label=\"Downloads\"\n          component={Link}\n          to=\"/downloads\"\n          label=\"Downloads\"\n        />\n        <CustomTabs\n          icon={<History />}\n          aria-label=\"History\"\n          component={Link}\n          to=\"/history\"\n          label=\"History\"\n        />\n      </CustomTab>\n    </div>\n  );\n};\n\nexport default withRouter(CurrentSection);\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\n\nimport {\n  SwipeableDrawer,\n  Avatar,\n  Divider,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link as MaterialLink\n} from \"@material-ui/core\";\n\nimport {\n  AccountCircle,\n  Feedback,\n  Info,\n  FreeBreakfast,\n  People,\n  Settings\n} from \"@material-ui/icons\";\n\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { GlobalContext } from \"./GlobalState\";\nimport \"./darkMode.css\";\nimport moon from \"../images/moon-solid.svg\";\nimport sun from \"../images/sun-solid.svg\";\n\nconst SwipeMenu = () => {\n  const [{ menuOpen, themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    dispatch({ type: \"setMenuOpen\", snippet: data });\n  };\n\n  const setThemeSelectValue = useCallback(\n    data => {\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [isNight, setIsNight] = useState(false);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      setIsNight(true);\n    } else {\n      setIsNight(false);\n    }\n  }, [themeSelectValue]);\n\n  const changeTheme = theme => {\n    setThemeSelectValue(theme);\n    localStorage.setItem(\"selectedTheme\", theme);\n  };\n\n  const handleThemeToggle = () => {\n    if (!isNight) {\n      changeTheme(\"Dark\");\n      setIsNight(false);\n    } else {\n      changeTheme(\"Default\");\n      setIsNight(true);\n    }\n  };\n\n  return (\n    <SwipeableDrawer\n      open={menuOpen}\n      onClose={() => setMenuOpen(false)}\n      onOpen={() => setMenuOpen(true)}\n    >\n      <div style={{ width: \"300px\" }}>\n        <div\n          style={{\n            margin: \"35px\",\n            position: \"relative\",\n            width: \"30px\",\n            height: \"30px\"\n          }}\n        >\n          <AnimatePresence>\n            <motion.img\n              key={isNight ? sun : moon}\n              initial={{ scale: 0 }}\n              animate={{ scale: 1.5, rotate: \"360deg\" }}\n              exit={{ scale: 0 }}\n              // transition={{ duration: 0.5 }}\n              src={isNight ? sun : moon}\n              onClick={() => handleThemeToggle()}\n              className=\"dayNightToggleBtn\"\n              alt=\"sun moon icon\"\n            />\n          </AnimatePresence>\n        </div>\n\n        <Divider />\n\n        <List\n          component=\"nav\"\n          className={\"pinkLists\"}\n          onClick={() => setMenuOpen(false)}\n        >\n          <ListItem button component={Link} to=\"/settings\">\n            <ListItemIcon>\n              <Settings />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/feedback\">\n            <ListItemIcon>\n              <Feedback />\n            </ListItemIcon>\n            <ListItemText primary=\"Feedback\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/donate\">\n            <ListItemIcon>\n              <FreeBreakfast />\n            </ListItemIcon>\n            <ListItemText primary=\"Donate & Support\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/contributors\">\n            <ListItemIcon>\n              <People />\n            </ListItemIcon>\n            <ListItemText primary=\"Contributors\" />\n          </ListItem>\n          <ListItem\n            button\n            component={MaterialLink}\n            target=\"blank\"\n            href=\"https://github.com/ShivamJoker/Ylight-Music-Client\"\n          >\n            <ListItemIcon>\n              <svg\n                width=\"24\"\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fab\"\n                data-icon=\"github\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 496 512\"\n                fill=\"#e91e63\"\n              >\n                <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\n              </svg>\n            </ListItemIcon>\n            <ListItemText primary=\"Github\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/privacy\">\n            <ListItemIcon>\n              <Info />\n            </ListItemIcon>\n            <ListItemText primary=\"Privacy & Policy\" />\n          </ListItem>\n        </List>\n      </div>\n    </SwipeableDrawer>\n  );\n};\n\nexport default SwipeMenu;\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  FormGroup,\n  FormControlLabel,\n  Box,\n  Typography\n} from \"@material-ui/core\";\n\nimport { GlobalContext } from \"../GlobalState\";\n\nexport const useCheckDarkmode = () => {\n  const [, dispatch] = useContext(GlobalContext);\n  const setThemeSelectValue = useCallback(\n    data => {\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\n    },\n    [dispatch]\n  );\n  const checkDarkMode = () => {\n    const selectedTheme = localStorage.getItem(\"selectedTheme\");\n\n    // we will check if system dark mode is enabled or not\n\n    const colorScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    colorScheme.addEventListener(\"change\", e => {\n      if (e.matches) {\n        // if it matches we will set it to dark else default\n        setThemeSelectValue(\"Dark\");\n      } else {\n        setThemeSelectValue(\"Default\");\n      }\n    });\n    if (selectedTheme) {\n      console.log(selectedTheme);\n      setThemeSelectValue(selectedTheme);\n\n      const date = new Date();\n      const hrs = date.getHours();\n\n      // if the theme is auto then only do it\n      if (selectedTheme === \"Auto\") {\n        if (hrs >= 18 || hrs <= 6) {\n          setThemeSelectValue(\"Dark\");\n        } else {\n          setThemeSelectValue(\"Default\");\n        }\n      }\n    }\n  };\n\n  return { checkDarkMode };\n};\n\nconst SettingsPage = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n  const setThemeSelectValue = useCallback(\n    data => {\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\n    },\n    [dispatch]\n  );\n  const handleThemeChange = e => {\n    setThemeSelectValue(e.target.value);\n    localStorage.setItem(\"selectedTheme\", e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(themeSelectValue);\n  }, [themeSelectValue]);\n\n  const selectComp = (\n    <Box m={1}>\n      \n      <Select\n        value={themeSelectValue}\n        onChange={handleThemeChange}\n        displayEmpty\n        name=\"age\"\n      >\n        <MenuItem value=\"Default\">Default</MenuItem>\n        <MenuItem value=\"Dark\">Dark</MenuItem>\n        <MenuItem value=\"Auto\">Auto</MenuItem>\n      </Select>\n    </Box>\n  );\n  return (\n    <Container>\n      <br />\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        Settings\n      </Typography>\n      <FormControl component=\"fieldset\">\n        <FormGroup row>\n          <FormControlLabel\n            labelPlacement=\"start\"\n            label=\"Select Theme \"\n            value=\"top\"\n            control={selectComp}\n          />\n        </FormGroup>\n      </FormControl>\n    </Container>\n  );\n};\nexport default SettingsPage;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport SimpleAppBar from \"./header/SimpleAppBar\";\nimport MainPlayer from \"./player/MainPlayer\";\nimport SwipeMenu from \"./SwipeMenu\";\nimport CurrentSection from \"./CurrentSection\";\nimport SnackbarMessage from \"./SnackbarMessage\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { pink } from \"@material-ui/core/colors\";\n\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\nimport { GlobalContext } from \"./GlobalState\";\n\nconst body = document.querySelector(\"body\");\n\nconst defaultTheme = {\n  palette: {\n    primary: pink,\n    secondary: {\n      main: \"#fafafa\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: pink,\n    secondary: {\n      main: \"#fafafa\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst muiDarkTheme = createMuiTheme(darkTheme);\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\n\nconst AppContainer = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const { checkDarkMode } = useCheckDarkmode();\n\n  useEffect(() => {\n    checkDarkMode();\n\n    if (navigator.userAgent.match(/Android/i)) {\n      body.style.overscrollBehavior = \"none\";\n      // this is to disable pull refresh on android\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [themeSelectValue]);\n\n  return (\n    <MuiThemeProvider\n      theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}\n    >\n      <Router>\n        <SimpleAppBar />\n        <Route component={CurrentSection} />\n\n        <SwipeMenu />\n      </Router>\n       \n    </MuiThemeProvider>\n  );\n};\nexport default AppContainer;\n","import React from \"react\";\n\nimport \"typeface-roboto\";\nimport { GlobalState } from \"./GlobalState\";\nimport AppContainer from \"./AppContainer\";\n\nfunction App() {\n  return (\n    <GlobalState>\n      <AppContainer />\n    </GlobalState>\n  );\n}\n\nexport default App;\n\n// this do not works","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n","import React, { useReducer } from \"react\";\n\nexport const GlobalContext = React.createContext();\n\nconst initialState = {\n  searchState: \"home\",\n  searchResult: [],\n  relatedVideos: [],\n  menuOpen: false,\n  snackbarMsg: false,\n  currentVideoSnippet: {},\n  themeSelectValue: \"Default\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setCurrentVideoSnippet\":\n      return {\n        ...state,\n        currentVideoSnippet: action.snippet\n      };\n\n    case \"setRelatedVideos\": {\n      return {\n        ...state,\n        relatedVideos: action.snippet\n      };\n    }\n    case \"setSnackbarMsg\": {\n      return {\n        ...state,\n        snackbarMsg: action.snippet\n      };\n    }\n    case \"setThemeSelectValue\": {\n      return {\n        ...state,\n        themeSelectValue: action.snippet\n      };\n    }\n    case \"setSearchState\": {\n      return {\n        ...state,\n        searchState: action.snippet\n      };\n    }\n    case \"setSearchResult\": {\n      return {\n        ...state,\n        searchResult: action.snippet\n      };\n    }\n    case \"setMenuOpen\": {\n      return {\n        ...state,\n        menuOpen: action.snippet\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const GlobalState = props => {\n  const globalState = useReducer(reducer, initialState);\n  return (\n    <GlobalContext.Provider value={globalState}>\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import Dexie from \"dexie\";\nimport \"dexie-observable\";\nimport { promised } from \"q\";\nimport { promises } from \"fs\";\n\n// Define your database\nexport const db = new Dexie(\"Song_Database\");\n\n// create new databse\n// our schema is of storing a song\ndb.version(1).stores({\n  songs:\n    \"&videoId, timestamp, playbackTimes, [rating+timestamp], [downloadState+timestamp]\"\n});\n\ndb.version(2).stores({});\n\n// add or update song on play\nexport const updatePlayingSong = async data => {\n  const videoObj = {\n    videoId: data.id,\n    timestamp: Date.now(),\n    title: data.title,\n    channelTitle: data.channelTitle,\n    playbackTimes: 1\n  };\n\n  const song = await db.songs.get({ videoId: data.id });\n  // if song exists we will just update the timestamp and the playback\n  if (song) {\n    db.songs.update(data.id, {\n      timestamp: Date.now(),\n      playbackTimes: song.playbackTimes + 1\n    });\n    console.log(\"song updated\");\n    return song.rating;\n    // return the rating\n  } else {\n    // we will add a new song\n    console.log(\"song added\");\n    db.songs.add(videoObj);\n  }\n};\n\n// like or dislike a song on database\nexport const rateSong = async (id, rating) => {\n  // if user likes the song then only download it\n\n  db.songs.update(id, {\n    rating: rating\n  });\n};\n\nexport const getHistory = async () => {\n  const songsByTimeStamp = await db.songs\n    .orderBy(\"timestamp\")\n    .limit(500)\n    .reverse()\n    .toArray();\n  return songsByTimeStamp;\n};\n\nexport const getLikedSongs = async () => {\n  const likedSongs = await db.songs\n    .where(\"[rating+timestamp]\") //this will filter song based on time and liked\n    .between([\"liked\", Dexie.minKey], [\"liked\", Dexie.maxKey])\n    .reverse()\n    .toArray();\n  return likedSongs;\n};\n\nexport const getDownloadedSongs = async () => {\n  const downloadedSongs = await db.songs\n    .where(\"[downloadState+timestamp]\") //this will filter song based on time and downloaded\n    .between([\"downloaded\", Dexie.minKey], [\"downloaded\", Dexie.maxKey])\n    .reverse()\n    .toArray();\n  return downloadedSongs;\n};\n\nexport const removeDownloadingState = async () => {\n  // find all the downloadState which is downloading and remove that\n  const songs = await db.songs\n    .where(\"[downloadState+timestamp]\")\n    .between([\"downloading\", Dexie.minKey], [\"downloading\", Dexie.maxKey])\n    .modify(x => {\n      delete x.downloadState;\n    });\n  console.log(songs);\n};\n\nexport const downloadSong = async (id, url) => {\n  try {\n    db.songs.update(id, {\n      downloadState: \"downloading\"\n    });\n    const thumbURL = `https://i.ytimg.com/vi/${id}/hqdefault.jpg`;\n    const [thumbnailBlob, songBlob] = await Promise.all([\n      fetchProxiedBlob(thumbURL),\n      fetchProxiedBlob(url)\n    ]);\n    db.songs.update(id, {\n      downloadState: \"downloaded\",\n      thumbnail: thumbnailBlob,\n      audio: songBlob\n    });\n    return \"downloaded\";\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deleteSongAudio = async id => {\n  await db.songs.where({ videoId: id }).modify(x => {\n    delete x.audio;\n    delete x.downloadState;\n  });\n  return \"song deleted\";\n};\n\nfunction fetchProxiedBlob(url) {\n  const URL = url;\n  return new Promise(function(resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"https://server.ylight.xyz/proxy/\" + URL);\n    xhr.responseType = \"blob\";\n    xhr.onload = function() {\n      var status = xhr.status;\n      if (status >= 200 && status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject({\n          status: status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n    xhr.send();\n    setTimeout(() => {\n      xhr.abort();\n      xhr.open(\"GET\", \"https://server.ylight.xyz/proxy/\" + URL);\n\n      xhr.send();\n    }, 1000);\n  });\n}\n","import axios from \"axios\";\n\n// put your api keys in .env file you can get those here - https://developers.google.com/youtube/v3/getting-started\nexport const selectRandomKey = () => {\n  const keys = [\"AIzaSyBQOrIXNurhz4htG_ThVh-hQGbHCSAb_8U\"]; //we are splitting the api keys to make an array\n  const random = Math.floor(Math.random() * Math.floor(keys.length)); //this will get a random number\n  return keys[random];\n};\n\nexport default axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n  params: {\n    part: \"snippet\",\n    videoCategoryId: \"10\",\n    type: \"video\",\n    key: selectRandomKey()\n  },\n  headers: {\"Access-Control-Allow-Origin\": \"*\"}\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://server.ylight.xyz',\n  // baseURL: 'https://ylight.glitch.me',\n  headers: {\"Access-Control-Allow-Origin\": \"*\"}\n});\n","module.exports = __webpack_public_path__ + \"static/media/moon-solid.bfe0ee19.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun-solid.f4e2a770.svg\";"],"sourceRoot":""}